#!/bin/bash

# Function to check if a command is installed
check_command_installed() {
    if ! command -v "$1" &> /dev/null; then
        echo "Error: $1 is not installed."
        exit 1
    fi
}

# Function to display usage information
usage() {
    echo "Usage: $0 --file <file> --encrypt | --decrypt [--help]"
    echo "  --encrypt        Encrypt the specified file"
    echo "  --decrypt        Decrypt the specified file"
    echo "  --help           Display this help message"
    exit 1
}

# Check if age-keygen and age are installed
check_command_installed "age"

# Default recipient's address
DEFAULT_RECIPIENT="default"

# Parse command line arguments
FILE=""
MODE=""
while [[ "$1" != "" ]]; do
    case $1 in
        --encrypt ) MODE="encrypt"
                    FILE=$2
                    shift
                    ;;
        --decrypt ) MODE="decrypt"
                    FILE=$2
                    shift
                    ;;
        --help ) usage
                 ;;
        * ) usage
            ;;
    esac
    shift
done

# Check if the mode (encrypt or decrypt) is specified
if [ -z "$MODE" ]; then
    echo "Error: Mode (encrypt or decrypt) is not specified."
    usage
fi


# Handle encryption
if [ "$MODE" == "encrypt" ]; then
    # Get recipient's address from user or use default
    read -p "Enter recipient's address (leave empty to use default): " RECIPIENT
    RECIPIENT=${RECIPIENT:-$DEFAULT_RECIPIENT}
    OUTPUT_FILE="${FILE}.age"
    if [ $RECIPIENT == "default" ]; then
      tar czf - "$FILE" | age --recipients-file ${HOME}/.secrets/age-recipients.txt > "$OUTPUT_FILE"
    else
      tar czf - "$FILE" | age --recipient "$RECIPIENT" > "$OUTPUT_FILE"
    fi
    echo "Encrypted file: $OUTPUT_FILE"

# Handle decryption
elif [ "$MODE" == "decrypt" ]; then
    DECRYPTED_FILE="${FILE%.age}"
    read -p "Please enter the location of your keyfile: " KEYFILE
    age --decrypt --identity ${KEYFILE} --output "$DECRYPTED_FILE" "$FILE"
    tar xzf "$DECRYPTED_FILE"
    echo "Decrypted file: $DECRYPTED_FILE"
fi
